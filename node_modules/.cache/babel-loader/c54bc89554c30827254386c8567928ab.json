{"ast":null,"code":"import { act } from 'react-dom/test-utils';\nimport { createStore } from 'redux';\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'INCREMENT') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'DECREMENT') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n};\n\nconst store = redux.createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["act","createStore","counterReducer","state","counter","action","type","store","redux"],"sources":["/Users/Hema/Desktop/React_Practice_Folder/Redux-Counter-App/src/store/index.js"],"sourcesContent":["import { act } from 'react-dom/test-utils';\nimport {createStore} from 'redux';\n\nconst counterReducer =(state ={counter:0}, action)=>{\n    if  (action.type ==='INCREMENT'){\n        return{\n            counter:state.counter+1\n        }\n\n    }\n        if(action.type === 'DECREMENT'){\n            return{\n                counter:state.counter -1\n            }\n        }\n        return state;\n}\nconst store = redux.createStore(counterReducer)\n\nexport default store;"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SAAQC,WAAR,QAA0B,OAA1B;;AAEA,MAAMC,cAAc,GAAE,YAA8B;EAAA,IAA7BC,KAA6B,uEAAtB;IAACC,OAAO,EAAC;EAAT,CAAsB;EAAA,IAATC,MAAS;;EAChD,IAAKA,MAAM,CAACC,IAAP,KAAe,WAApB,EAAgC;IAC5B,OAAM;MACFF,OAAO,EAACD,KAAK,CAACC,OAAN,GAAc;IADpB,CAAN;EAIH;;EACG,IAAGC,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;IAC3B,OAAM;MACFF,OAAO,EAACD,KAAK,CAACC,OAAN,GAAe;IADrB,CAAN;EAGH;;EACD,OAAOD,KAAP;AACP,CAbD;;AAcA,MAAMI,KAAK,GAAGC,KAAK,CAACP,WAAN,CAAkBC,cAAlB,CAAd;AAEA,eAAeK,KAAf"},"metadata":{},"sourceType":"module"}